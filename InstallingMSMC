#start an interactive session with qrsh:

qrsh -l i,h_data=1g

#load the latests gdc
module load gdc/4.9.3

#download the source:
wget https://github.com/stschiff/msmc/archive/master.zip

#unpack:
unzip master.zip
cd msmc-master

#edit the Makefile so that it will be:
###
# Set this variable to your static gsl libraries
#GSL = /usr/local/lib/libgsl.a /usr/local/lib/libgslcblas.a
GSL = -lgsl -lgslcblas

build/msmc : model/*.d powell.d brent.d maximization_step.d expectation_step.d msmc.d branchlength.d logger.d
#dmd -O ${GSL} -odbuild -ofbuild/msmc $^
gdc -O ${GSL} -o msmc $^

build/maximize : model/*.d powell.d brent.d maximization_step.d logger.d maximize.d
#dmd -O ${GSL} -odbuild -ofbuild/maximize $^
gdc -O ${GSL} -o maximize $^

build/test/msmc : model/*.d powell.d brent.d maximization_step.d expectation_step.d msmc.d branchlength.d logger.d
#dmd -O ${GSL} -odbuild/test -ofbuild/test/msmc $^
gdc -O ${GSL} -o test/msmc $^

build/test : model/*.d test.d
#dmd ${GSL} -odbuild -ofbuild/test $^
gdc ${GSL} -o test $^

build/decode : model/*.d decode.d branchlength.d
#dmd ${GSL} -odbuild -ofbuild/decode $^
gdc ${GSL} -o decode $^

build/decodeStates : model/*.d decodeStates.d branchlength.d
#dmd ${GSL} -odbuild -ofbuild/decodeStates $^
gdc ${GSL} -o decodeStates $^

.PHONY : unittest testcoverage clean

testcoverage : model/*.d unittest.d powell.d brent.d maximization_step.d expectation_step.d amoeba.d logger.d
mkdir -p code_coverage
#dmd -unittest -cov ${GSL} -odbuild -ofbuild/unittest $^
gdc ${GSL} -o unittest $^
build/unittest
mv *.lst code_coverage/

unittest : model/*.d unittest.d powell.d brent.d maximization_step.d expectation_step.d logger.d branchlength.d
#dmd -unittest ${GSL} -odbuild -ofbuild/unittest $^
gdc ${GSL} -o unittest $^
build/unittest

clean :
find build -type f -delete
###
#Now to make msmc issue:

make build/msmc
